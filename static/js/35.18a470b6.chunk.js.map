{"version":3,"file":"static/js/35.18a470b6.chunk.js","mappings":"mMA8BA,EA3BmB,SAAHA,GAAoB,IAAdC,EAAMD,EAANC,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SACGL,EAAOM,KAAI,SAAAC,GAAoB,IAAjBC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MACjB,OAAIA,GAEAN,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaJ,GAAMK,MAAO,CAAEC,KAAMb,GAAWI,SAClDI,KAFID,GAON,IACT,OAIR,C,+JCkBA,EAnCiB,WACf,IAAAO,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAoB9B,OAlBAG,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAYvB,OAZuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OAAnBT,GAAa,GAAMO,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAGMC,EAAAA,EAAAA,MAAgB,KAAD,EAAhCJ,EAAQC,EAAAI,KAEdf,EAAkBU,EAASM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEpCO,EAAAA,GAAAA,MAAYP,EAAAM,GAAME,SAAS,QAEP,OAFOR,EAAAC,KAAA,GAE3BR,GAAa,GAAOO,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAZ,EAAA,yBAEvBa,MAAA,KAAAC,UAAA,EAbc,WACSjB,EAAAgB,MAAC,KAADC,UAAA,CAcxBC,EACF,GAAG,KAGDC,EAAAA,EAAAA,MAAAzC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAEHkB,IAAapB,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,IAEpB3B,EAAe4B,OAAS,IAAMxB,IAC7BpB,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAAChD,OAAQmB,MAI5B,C","sources":["components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => {\n          if (title) {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          }\n          return null;\n        })}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { fetchTrending } from 'api/MoviedbAPI';\nimport MoviesList from 'components/MoviesList';\nimport Loader from 'components/Loader';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovies() {\n      setIsLoading(true);\n\n      try {\n        const response = await fetchTrending();\n\n        setTrendingMovies(response.results);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      <h2>Trending</h2>\n\n      {isLoading && <Loader />}\n\n      {trendingMovies.length > 0 && !isLoading && (\n        <MoviesList movies={trendingMovies} />\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","movies","location","useLocation","_jsx","_Fragment","children","map","_ref2","id","title","Link","to","concat","state","from","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","isLoading","setIsLoading","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchTrending","sent","results","t0","toast","message","finish","stop","apply","arguments","getMovies","_jsxs","Loader","length","MoviesList"],"sourceRoot":""}