{"version":3,"file":"static/js/705.9ec6f62c.chunk.js","mappings":"qLAEaA,E,OAAUC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8E,SCShC,EARc,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACf,OAAOC,EAAAA,EAAAA,KAACN,EAAO,CAAAO,SAAEF,GACnB,C,iLCkDA,EA/C0B,WAAO,IAADG,EAAAC,EAC9BC,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAOH,GAEnBI,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACuB,SAAAC,IAY9B,OAZ8BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA/B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OAAnBf,GAAa,GAAMa,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAGMC,EAAAA,EAAAA,IAAmBX,GAAS,KAAD,EAA5CO,EAAQC,EAAAI,KAEdrB,EAAgBgB,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE1BM,EAAAA,GAAAA,MAAYN,EAAAK,GAAME,SAAS,QAEP,OAFOP,EAAAC,KAAA,GAE3Bd,GAAa,GAAOa,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,yBAEvBY,MAAA,KAAAC,UAAA,EAbc,WACgBhB,EAAAe,MAAC,KAADC,UAAA,CAc/BC,EACF,GAAG,CAACpB,KAGFqB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvC,SAAA,EACED,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CAACC,GAAmC,QAAjCxC,EAA2B,QAA3BC,EAAEa,EAAY2B,QAAQC,aAAK,IAAAzC,OAAA,EAAzBA,EAA2B0C,YAAI,IAAA3C,EAAAA,EAAI,IAAID,UAC/CD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,YAGVD,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CAAC/C,MAAO,kBAEba,IAAaZ,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,IAEpBvC,EAAaT,OAEdC,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CAACC,GAAG,OAAMzC,SAAC,UAChBD,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CAACC,GAAG,UAASzC,SAAC,aAEnBD,EAAAA,EAAAA,KAACgD,EAAAA,GAAM,MAGb,C","sources":["components/Title/Title.styled.js","components/Title/Title.jsx","pages/MoviesDetailsPage/MoviesDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitleEl = styled.h2`\n  text-align: left;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { TitleEl } from './Title.styled';\n\nconst Title = ({ title }) => {\n  return <TitleEl>{title}</TitleEl>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import { useState, useEffect, useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { fetchMoviesDetails } from 'api/MoviedbAPI';\nimport Loader from 'components/Loader';\nimport Title from 'components/Title';\n\nconst MoviesDetailsPage = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMoviesDetails() {\n      setIsLoading(true);\n\n      try {\n        const response = await fetchMoviesDetails(movieId);\n\n        setMovieDetails(response);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMoviesDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkRef.current.state?.from ?? '/'}>\n        <button>Back</button>\n      </Link>\n\n      <Title title={'Movie Details'} />\n\n      {isLoading && <Loader />}\n\n      {movieDetails.title}\n\n      <Link to=\"cast\">Cast</Link>\n      <Link to=\"reviews\">Reviews</Link>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["TitleEl","styled","_templateObject","_taggedTemplateLiteral","_ref","title","_jsx","children","_backLinkRef$current$","_backLinkRef$current$2","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","backLinkRef","useRef","movieId","useParams","useEffect","_getMoviesDetails","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMoviesDetails","sent","t0","toast","message","finish","stop","apply","arguments","getMoviesDetails","_jsxs","_Fragment","Link","to","current","state","from","Title","Loader","Outlet"],"sourceRoot":""}