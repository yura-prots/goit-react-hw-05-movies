{"version":3,"file":"static/js/714.a4d88d7e.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n  padding: 15px;\n  margin: 0;\n`;\n\nexport const LinkEl = styled(Link)`\n  text-decoration: none;\n  color: black;\n  :hover {\n    color: red;\n  }\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { List, Item, LinkEl, Card } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          if (title) {\n            return (\n              <Item key={id}>\n                <LinkEl to={`/movies/${id}`} state={{ from: location }}>\n                  <Card>\n                    {poster_path ? (\n                      <img\n                        src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                        alt={title}\n                      />\n                    ) : (\n                      <p>No Poster</p>\n                    )}\n                    {title}\n                  </Card>\n                </LinkEl>\n              </Item>\n            );\n          }\n          return null;\n        })}\n      </List>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  margin-right: 10px;\n  color: black;\n  border: 2px solid black;\n  border-radius: 10px;\n  padding: 10px 25px;\n  background: transparent;\n  max-width: 190px;\n`;\n\nexport const SearchButton = styled.button`\n  cursor: pointer;\n  color: black;\n  border: 2px solid black;\n  border-radius: 10px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding: 10px 15px;\n  background: transparent;\n\n  &:hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { Form, Input, SearchButton } from './Searchbar.styled';\n\nconst Searchbar = ({ onSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query === '') {\n      return toast.info('Enter movie name');\n    }\n    onSearch(query);\n\n    setQuery('');\n  };\n\n  const handleQuery = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={handleQuery}\n          placeholder=\"Enter movie name\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </Form>\n    </>\n  );\n};\n\nSearchbar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import styled from 'styled-components';\n\nexport const BackButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { fetchMovies } from 'api/MoviedbAPI';\nimport Searchbar from 'components/Searchbar';\nimport MoviesList from 'components/MoviesList';\nimport Loader from 'components/Loader';\nimport { BackButton } from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n\n  const movieName = searchParams.get('query') ?? '';\n\n  const handleSearch = query => {\n    const changeParams = query !== '' ? { query } : {};\n    setSearchParams(changeParams);\n  };\n\n  useEffect(() => {\n    async function searchMovie() {\n      if (!movieName) {\n        return;\n      }\n\n      setIsLoading(true);\n\n      try {\n        const response = await fetchMovies(movieName);\n        if (!response.total_results) {\n          return toast.info(`No movies with ${movieName} name`);\n        }\n\n        setMovies(response.results);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    searchMovie();\n  }, [movieName]);\n\n  return (\n    <>\n      <Link to={backLinkRef.current.state?.from ?? '/'}>\n        <BackButton>Back</BackButton>\n      </Link>\n\n      <Searchbar onSearch={handleSearch} />\n\n      {isLoading && <Loader />}\n\n      {movies.length > 0 && !isLoading && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","LinkEl","Link","_templateObject3","Card","_templateObject4","_ref","movies","location","useLocation","_jsx","_Fragment","children","map","_ref2","id","title","poster_path","to","concat","state","from","_jsxs","src","alt","Form","Input","SearchButton","onSearch","_useState","useState","_useState2","_slicedToArray","query","setQuery","onSubmit","e","preventDefault","toast","type","name","value","onChange","target","toLowerCase","placeholder","autoComplete","autoFocus","BackButton","_searchParams$get","_backLinkRef$current$","_backLinkRef$current$2","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","setMovies","_useState3","_useState4","isLoading","setIsLoading","backLinkRef","useRef","movieName","get","useEffect","_searchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","abrupt","fetchMovies","sent","total_results","results","t0","message","finish","stop","apply","arguments","searchMovie","current","Searchbar","Loader","length","MoviesList"],"sourceRoot":""}